openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /api/v1/products/{id}:
    get:
      tags:
        - product-controller
      operationId: getProductById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductResponseDto'
    put:
      tags:
        - product-controller
      operationId: updateProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductResponseDto'
    delete:
      tags:
        - product-controller
      operationId: deleteProductById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
  /api/v1/products:
    get:
      tags:
        - product-controller
      operationId: getAllProducts
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductResponseDto'
    post:
      tags:
        - product-controller
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateDto'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductResponseDto'
  /api/v1/categories:
    get:
      tags:
        - category-controller
      operationId: getAllCategories
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryDto'
  /api/v1/categories/{id}:
    get:
      tags:
        - category-controller
      operationId: getCategoryById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CategoryDto'
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    ProductUpdateDto:
      required:
        - category
        - description
        - name
        - price
      type: object
      properties:
        name:
          maxLength: 100
          minLength: 0
          type: string
        description:
          maxLength: 255
          minLength: 0
          type: string
        price:
          minimum: 1
          type: integer
          format: int32
        category:
          $ref: '#/components/schemas/Category'
    ProductResponseDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        price:
          type: integer
          format: int32
        category:
          $ref: '#/components/schemas/Category'
    ProductCreateDto:
      required:
        - category
        - description
        - name
        - price
      type: object
      properties:
        name:
          maxLength: 100
          minLength: 0
          type: string
        description:
          maxLength: 255
          minLength: 0
          type: string
        price:
          minimum: 1
          type: integer
          format: int32
        category:
          $ref: '#/components/schemas/Category'
    CategoryDto:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 100
          minLength: 0
          type: string
